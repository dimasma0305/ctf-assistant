<% 
const layoutData = {
    title: 'Profile',
    user: user,
    currentPage: 'profile',
    pageHeader: 'User Profile',
    headerActions: `
        <button class="btn btn-primary btn-custom" onclick="saveProfile()">
            <i class="bi bi-check-circle me-2"></i>Save Changes
        </button>
    `,
    extraCSS: `
        <style>
            .profile-avatar {
                width: 120px;
                height: 120px;
                border-radius: 50%;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 3rem;
                color: white;
                margin: 0 auto 1rem;
                position: relative;
                cursor: pointer;
                transition: all 0.3s ease;
            }
            
            .profile-avatar:hover {
                transform: scale(1.05);
                box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            }
            
            .profile-avatar .overlay {
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: rgba(0,0,0,0.5);
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                opacity: 0;
                transition: opacity 0.3s ease;
                cursor: pointer;
            }
            
            .profile-avatar:hover .overlay {
                opacity: 1;
            }
            
            .activity-timeline {
                position: relative;
            }
            
            .activity-timeline::before {
                content: '';
                position: absolute;
                left: 20px;
                top: 0;
                bottom: 0;
                width: 2px;
                background: linear-gradient(to bottom, #667eea, #764ba2);
            }
            
            .activity-item {
                position: relative;
                padding-left: 50px;
                margin-bottom: 2rem;
            }
            
            .activity-item::before {
                content: '';
                position: absolute;
                left: 12px;
                top: 0;
                width: 16px;
                height: 16px;
                background: #667eea;
                border-radius: 50%;
                border: 3px solid white;
                box-shadow: 0 2px 6px rgba(0,0,0,0.1);
            }
            
            .stat-badge {
                background: linear-gradient(135deg, var(--primary-color), var(--info-color));
                color: white;
                border-radius: 25px;
                padding: 0.5rem 1rem;
                font-weight: 600;
                display: inline-block;
                margin: 0.25rem;
            }
            
            .progress-custom {
                height: 8px;
                border-radius: 10px;
                background-color: #e9ecef;
            }
            
            .progress-bar-custom {
                background: linear-gradient(90deg, #667eea, #764ba2);
                border-radius: 10px;
                transition: width 0.6s ease;
            }
        </style>
    `,
    extraJS: `
        <script>
            async function saveProfile() {
                const profileData = {
                    displayName: document.getElementById('display-name').value,
                    email: document.getElementById('email').value,
                    bio: document.getElementById('bio').value,
                    timezone: document.getElementById('timezone').value,
                    theme: document.getElementById('theme').value,
                    notifications: {
                        emailSolves: document.getElementById('email-solves').checked,
                        emailEvents: document.getElementById('email-events').checked,
                        discordDM: document.getElementById('discord-dm').checked
                    },
                    privacy: {
                        showEmail: document.getElementById('show-email').checked,
                        showStats: document.getElementById('show-stats').checked,
                        showActivity: document.getElementById('show-activity').checked
                    }
                };
                
                try {
                    const response = await fetch('/api/profile', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(profileData)
                    });
                    
                    if (response.ok) {
                        showAlert('Profile updated successfully!', 'success');
                        loadProfile(); // Refresh profile data
                    } else {
                        throw new Error('Failed to save profile');
                    }
                } catch (error) {
                    showAlert('Failed to update profile', 'danger');
                }
            }
            
            async function changePassword() {
                const currentPassword = document.getElementById('current-password').value;
                const newPassword = document.getElementById('new-password').value;
                const confirmPassword = document.getElementById('confirm-password').value;
                
                if (newPassword !== confirmPassword) {
                    showAlert('New passwords do not match', 'warning');
                    return;
                }
                
                if (newPassword.length < 8) {
                    showAlert('Password must be at least 8 characters long', 'warning');
                    return;
                }
                
                try {
                    const response = await fetch('/api/change-password', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            currentPassword,
                            newPassword
                        })
                    });
                    
                    if (response.ok) {
                        showAlert('Password changed successfully!', 'success');
                        // Clear password fields
                        document.getElementById('current-password').value = '';
                        document.getElementById('new-password').value = '';
                        document.getElementById('confirm-password').value = '';
                    } else {
                        const error = await response.json();
                        throw new Error(error.message || 'Failed to change password');
                    }
                } catch (error) {
                    showAlert(error.message, 'danger');
                }
            }
            
            async function loadProfile() {
                try {
                    const response = await fetch('/api/profile');
                    const profile = await response.json();
                    
                    // Update profile form with loaded data
                    document.getElementById('display-name').value = profile.displayName || '';
                    document.getElementById('email').value = profile.email || '';
                    document.getElementById('bio').value = profile.bio || '';
                    document.getElementById('timezone').value = profile.timezone || 'UTC';
                    document.getElementById('theme').value = profile.theme || 'light';
                    
                    // Update notification preferences
                    document.getElementById('email-solves').checked = profile.notifications?.emailSolves || false;
                    document.getElementById('email-events').checked = profile.notifications?.emailEvents || false;
                    document.getElementById('discord-dm').checked = profile.notifications?.discordDM || false;
                    
                    // Update privacy settings
                    document.getElementById('show-email').checked = profile.privacy?.showEmail || false;
                    document.getElementById('show-stats').checked = profile.privacy?.showStats !== false; // Default true
                    document.getElementById('show-activity').checked = profile.privacy?.showActivity !== false; // Default true
                    
                    // Update stats
                    updateProfileStats(profile.stats || {});
                    updateRecentActivity(profile.recentActivity || []);
                    
                } catch (error) {
                    console.error('Failed to load profile:', error);
                }
            }
            
            function updateProfileStats(stats) {
                document.getElementById('total-solves').textContent = stats.totalSolves || 0;
                document.getElementById('events-participated').textContent = stats.eventsParticipated || 0;
                document.getElementById('challenges-created').textContent = stats.challengesCreated || 0;
                document.getElementById('success-rate').textContent = (stats.successRate || 0) + '%';
                
                // Update progress bars
                const successRate = stats.successRate || 0;
                document.getElementById('success-progress').style.width = successRate + '%';
                
                const activityLevel = Math.min((stats.totalSolves || 0) / 100 * 100, 100);
                document.getElementById('activity-progress').style.width = activityLevel + '%';
            }
            
            function updateRecentActivity(activities) {
                const container = document.getElementById('recent-activity');
                
                if (activities.length === 0) {
                    container.innerHTML = '<p class="text-muted text-center">No recent activity</p>';
                    return;
                }
                
                container.innerHTML = activities.slice(0, 5).map(activity => \`
                    <div class="activity-item">
                        <div class="fw-bold">\${activity.title}</div>
                        <div class="text-muted small">\${activity.description}</div>
                        <div class="text-muted small">\${new Date(activity.timestamp).toLocaleDateString()}</div>
                    </div>
                \`).join('');
            }
            
            function uploadAvatar() {
                const input = document.createElement('input');
                input.type = 'file';
                input.accept = 'image/*';
                input.onchange = function(event) {
                    const file = event.target.files[0];
                    if (file) {
                        if (file.size > 5 * 1024 * 1024) { // 5MB limit
                            showAlert('Image size must be less than 5MB', 'warning');
                            return;
                        }
                        
                        const formData = new FormData();
                        formData.append('avatar', file);
                        
                        fetch('/api/upload-avatar', {
                            method: 'POST',
                            body: formData
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                showAlert('Avatar updated successfully!', 'success');
                                // Update avatar display
                                document.getElementById('profile-avatar').style.backgroundImage = \`url(\${data.avatarUrl})\`;
                            } else {
                                throw new Error(data.message);
                            }
                        })
                        .catch(error => {
                            showAlert('Failed to upload avatar', 'danger');
                        });
                    }
                };
                input.click();
            }
            
            function downloadData() {
                // Download user's personal data
                fetch('/api/download-user-data', {
                    method: 'POST'
                })
                .then(response => response.blob())
                .then(blob => {
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = \`profile-data-\${new Date().toISOString().split('T')[0]}.json\`;
                    document.body.appendChild(a);
                    a.click();
                    window.URL.revokeObjectURL(url);
                    document.body.removeChild(a);
                    showAlert('Profile data downloaded successfully', 'success');
                })
                .catch(error => {
                    showAlert('Failed to download profile data', 'danger');
                });
            }
            
            function showAlert(message, type = 'info') {
                const alertDiv = document.createElement('div');
                alertDiv.className = \`alert alert-\${type} alert-dismissible fade show\`;
                alertDiv.innerHTML = \`
                    \${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                \`;
                document.querySelector('.main-content').prepend(alertDiv);
                setTimeout(() => alertDiv.remove(), 5000);
            }
            
            // Initialize profile page
            document.addEventListener('DOMContentLoaded', function() {
                loadProfile();
            });
        </script>
    `
};
%>

<%- include('layout', { 
    ...layoutData, 
    body: `
        <div class="row">
            <!-- Profile Information -->
            <div class="col-lg-4 mb-4">
                <div class="card">
                    <div class="card-body text-center">
                        <div class="profile-avatar" id="profile-avatar" onclick="uploadAvatar()">
                            <i class="bi bi-person"></i>
                            <div class="overlay">
                                <i class="bi bi-camera"></i>
                            </div>
                        </div>
                        
                        <h4 class="mb-1" id="profile-username">${user}</h4>
                        <p class="text-muted mb-3">CTF Administrator</p>
                        
                        <div class="d-flex justify-content-center gap-2 mb-3">
                            <span class="stat-badge">
                                <i class="bi bi-trophy me-1"></i>
                                <span id="total-solves">0</span> Solves
                            </span>
                            <span class="stat-badge">
                                <i class="bi bi-calendar me-1"></i>
                                <span id="events-participated">0</span> Events
                            </span>
                        </div>
                        
                        <button class="btn btn-outline-primary btn-custom w-100 mb-2" onclick="downloadData()">
                            <i class="bi bi-download me-2"></i>Download My Data
                        </button>
                    </div>
                </div>
                
                <!-- Statistics -->
                <div class="card mt-4">
                    <div class="card-header">
                        <h6 class="mb-0"><i class="bi bi-graph-up me-2"></i>Statistics</h6>
                    </div>
                    <div class="card-body">
                        <div class="row text-center mb-3">
                            <div class="col-6">
                                <h5 class="text-primary" id="challenges-created">0</h5>
                                <small class="text-muted">Challenges Created</small>
                            </div>
                            <div class="col-6">
                                <h5 class="text-success" id="success-rate">0%</h5>
                                <small class="text-muted">Success Rate</small>
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <div class="d-flex justify-content-between align-items-center mb-1">
                                <small class="text-muted">Success Rate</small>
                                <small class="text-muted" id="success-rate-text">0%</small>
                            </div>
                            <div class="progress-custom">
                                <div class="progress-bar-custom" id="success-progress" style="width: 0%"></div>
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <div class="d-flex justify-content-between align-items-center mb-1">
                                <small class="text-muted">Activity Level</small>
                                <small class="text-muted">Active</small>
                            </div>
                            <div class="progress-custom">
                                <div class="progress-bar-custom" id="activity-progress" style="width: 0%"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Profile Settings -->
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header">
                        <ul class="nav nav-tabs card-header-tabs" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" data-bs-toggle="tab" href="#general" role="tab">
                                    <i class="bi bi-person me-1"></i>General
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="tab" href="#preferences" role="tab">
                                    <i class="bi bi-gear me-1"></i>Preferences
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="tab" href="#security" role="tab">
                                    <i class="bi bi-shield me-1"></i>Security
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="tab" href="#activity" role="tab">
                                    <i class="bi bi-activity me-1"></i>Activity
                                </a>
                            </li>
                        </ul>
                    </div>
                    
                    <div class="card-body">
                        <div class="tab-content">
                            <!-- General Tab -->
                            <div class="tab-pane fade show active" id="general" role="tabpanel">
                                <form>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="mb-3">
                                                <label for="display-name" class="form-label">Display Name</label>
                                                <input type="text" class="form-control" id="display-name" value="${user}">
                                            </div>
                                            
                                            <div class="mb-3">
                                                <label for="email" class="form-label">Email Address</label>
                                                <input type="email" class="form-control" id="email" placeholder="admin@example.com">
                                            </div>
                                        </div>
                                        
                                        <div class="col-md-6">
                                            <div class="mb-3">
                                                <label for="timezone" class="form-label">Timezone</label>
                                                <select class="form-select" id="timezone">
                                                    <option value="UTC">UTC</option>
                                                    <option value="America/New_York">Eastern Time</option>
                                                    <option value="America/Chicago">Central Time</option>
                                                    <option value="America/Denver">Mountain Time</option>
                                                    <option value="America/Los_Angeles">Pacific Time</option>
                                                    <option value="Europe/London">London</option>
                                                    <option value="Europe/Paris">Paris</option>
                                                    <option value="Asia/Tokyo">Tokyo</option>
                                                </select>
                                            </div>
                                            
                                            <div class="mb-3">
                                                <label for="theme" class="form-label">Theme</label>
                                                <select class="form-select" id="theme">
                                                    <option value="light">Light</option>
                                                    <option value="dark">Dark</option>
                                                    <option value="auto">Auto</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="mb-3">
                                        <label for="bio" class="form-label">Bio</label>
                                        <textarea class="form-control" id="bio" rows="3" placeholder="Tell us about yourself..."></textarea>
                                    </div>
                                </form>
                            </div>
                            
                            <!-- Preferences Tab -->
                            <div class="tab-pane fade" id="preferences" role="tabpanel">
                                <h6>Notification Preferences</h6>
                                <div class="row mb-4">
                                    <div class="col-md-6">
                                        <div class="form-check mb-2">
                                            <input class="form-check-input" type="checkbox" id="email-solves">
                                            <label class="form-check-label" for="email-solves">
                                                Email on solve notifications
                                            </label>
                                        </div>
                                        
                                        <div class="form-check mb-2">
                                            <input class="form-check-input" type="checkbox" id="email-events">
                                            <label class="form-check-label" for="email-events">
                                                Email on new CTF events
                                            </label>
                                        </div>
                                    </div>
                                    
                                    <div class="col-md-6">
                                        <div class="form-check mb-2">
                                            <input class="form-check-input" type="checkbox" id="discord-dm">
                                            <label class="form-check-label" for="discord-dm">
                                                Discord DM notifications
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                
                                <h6>Privacy Settings</h6>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-check mb-2">
                                            <input class="form-check-input" type="checkbox" id="show-email">
                                            <label class="form-check-label" for="show-email">
                                                Make email public
                                            </label>
                                        </div>
                                        
                                        <div class="form-check mb-2">
                                            <input class="form-check-input" type="checkbox" id="show-stats" checked>
                                            <label class="form-check-label" for="show-stats">
                                                Show statistics publicly
                                            </label>
                                        </div>
                                    </div>
                                    
                                    <div class="col-md-6">
                                        <div class="form-check mb-2">
                                            <input class="form-check-input" type="checkbox" id="show-activity" checked>
                                            <label class="form-check-label" for="show-activity">
                                                Show activity publicly
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Security Tab -->
                            <div class="tab-pane fade" id="security" role="tabpanel">
                                <h6>Change Password</h6>
                                <form onsubmit="event.preventDefault(); changePassword();">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="mb-3">
                                                <label for="current-password" class="form-label">Current Password</label>
                                                <input type="password" class="form-control" id="current-password" required>
                                            </div>
                                        </div>
                                        
                                        <div class="col-md-6">
                                            <div class="mb-3">
                                                <label for="new-password" class="form-label">New Password</label>
                                                <input type="password" class="form-control" id="new-password" required>
                                                <div class="form-text">At least 8 characters</div>
                                            </div>
                                        </div>
                                        
                                        <div class="col-md-6">
                                            <div class="mb-3">
                                                <label for="confirm-password" class="form-label">Confirm Password</label>
                                                <input type="password" class="form-control" id="confirm-password" required>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <button type="submit" class="btn btn-warning btn-custom">
                                        <i class="bi bi-key me-2"></i>Change Password
                                    </button>
                                </form>
                                
                                <hr>
                                
                                <h6>Login Sessions</h6>
                                <div class="table-responsive">
                                    <table class="table table-sm">
                                        <thead>
                                            <tr>
                                                <th>Device</th>
                                                <th>Location</th>
                                                <th>Last Active</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td>
                                                    <i class="bi bi-laptop me-2"></i>Current Session
                                                    <span class="badge bg-success ms-2">Active</span>
                                                </td>
                                                <td>-</td>
                                                <td>Now</td>
                                                <td>-</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            
                            <!-- Activity Tab -->
                            <div class="tab-pane fade" id="activity" role="tabpanel">
                                <h6>Recent Activity</h6>
                                <div class="activity-timeline" id="recent-activity">
                                    <div class="text-center py-4">
                                        <div class="loading"></div>
                                        <p class="text-muted mt-2">Loading activity...</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `
}) %>
